import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id "fabric-loom" version "1.6-SNAPSHOT"
	id "maven-publish"
	id "org.jetbrains.kotlin.jvm" version "1.8.0"
	id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()

	maven {
		name = "CurseForge"
		url = "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}
	maven {url = "https://squiddev.cc/maven/"}

	maven { url = "https://maven.terraformersmc.com/releases" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://maven.ladysnake.org/releases" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://mvn.devos.one/snapshots" } // Create and several dependencies
	maven { url = "https://maven.tterrag.com/" } // Flywheel
	maven { url = "https://mvn.devos.one/releases" } // Porting Lib releases
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	//maven { url = "https://185.199.110.133/Fuzss/modresources/main/maven/" } // Forge Config API Port
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven" } // Forge Config API Port

	maven { // Fabric ASM for Porting Lib
		url = "https://jitpack.io/"
		content { includeGroupAndSubgroups("com.github") }
	}

	maven { url = "https://maven.cafeteria.dev/releases" }
	maven {
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		url "https://maven2.bai.lol"
		content {
			includeGroup "lol.bai"
			includeGroup "mcp.mobius.waila"
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	modImplementation "at.petra-k.paucal:paucal-common-$minecraft_version:$paucal_version"
    modImplementation "vazkii.patchouli:Patchouli:$minecraft_version-$patchouli_version-FABRIC"
	modImplementation("at.petra-k.hexcasting:hexcasting-fabric-$minecraft_version:$hexcasting_version") {
		exclude module: "phosphor"
        exclude module: "lithium"
		exclude module: "emi"
	}

	//api "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:7.0.0"
	modImplementation("com.simibubi.create:create-fabric-$minecraft_version:$create_version")
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		jvmTarget = 17
	}
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN") // Remember to have the MODRINTH_TOKEN environment variable set or else this will fail - just make sure it stays private!
	projectId = "my-project" // This can be the project ID or the slug. Either will work!
	versionNumber = "0.0.3" // You don't need to set this manually. Will fail if Modrinth has this version already
	versionType = "alpha" // This is the default -- can also be `beta` or `alpha`
	uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
	gameVersions = ["1.20.1"] // Must be an array, even with only one version
	loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
	dependencies { // A special DSL for creating dependencies
		// scope.type
		// The scope can be `required`, `optional`, `incompatible`, or `embedded`
		// The type can either be `project` or `version`
		required.project "fabric-api" // Creates a new required dependency on Fabric API
		required.project "hex-casting"
		required.project "create-fabric"
	}
}